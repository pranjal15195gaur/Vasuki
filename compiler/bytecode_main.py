# main.py

import sys
from parser import parse
from bytecode import BytecodeGenerator

def main():
    if len(sys.argv) < 2:
        print("Usage: python main.py <source_file>")
        sys.exit(1)

    source_file = sys.argv[1]
    try:
        with open(source_file, "r") as f:
            source_code = f.read()
    except FileNotFoundError:
        print(f"Error: File '{source_file}' not found.")
        sys.exit(1)

    try:
        # Lex and parse the source code to produce an AST
        ast = parse(source_code)
        from pprint import pprint
        pprint(ast)
        
    except Exception as e:
        print("Parsing error:", e)
        sys.exit(1)

    # Generate bytecode from the AST
    generator = BytecodeGenerator()
    bytecode = generator.generate(ast)

    # Output the generated bytecode
    print("Generated Bytecode:")
    print(bytecode)

if __name__ == "__main__":
    main()
