from compiler.parser import parse
from compiler.codegen import compile_program
import vm

def main():
    # Example source code in your language.
    source = "5 + 3"
    # Parse the source into an AST.
    ast = parse(source)
    # Compile the AST into VM instructions (bytecode).
    bytecode = compile_program(ast)
    # Append HALT instruction: (OP_TRAP << 12) | 0x25 with OP_TRAP = 4.
    halt_instr = (4 << 12) | 0x25
    bytecode.append(halt_instr)
    print("Generated bytecode:", bytecode)
    # Load the bytecode into the VM.
    vm.load_program(bytecode)
    # Run the VM.
    vm.run_vm()
    # Print final result stored in R0.
    print("Result in R0 =", vm.registers[0])

if __name__ == "__main__":
    main()
